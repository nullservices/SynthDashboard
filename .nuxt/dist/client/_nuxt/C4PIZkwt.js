import{_ as y,o as n,c as o,F as r,n as u,a as d,M as v,t as _,N as b,b as g}from"./zLvQlRDL.js";import{i as m}from"./DOKZlqMn.js";const K={props:{knobs:Array}},k={class:"knobs-grid"},$={class:"knob-label"},I={class:"knob-value"};function V(a,i,l,e,s,c){return n(),o("div",k,[(n(!0),o(r,null,u(l.knobs,t=>(n(),o("div",{key:t.id,class:"knob-container"},[d("div",{class:"knob",style:v({transform:`rotate(${t.angle}deg)`})},null,4),d("div",$,_(t.label),1),d("div",I,_(t.value),1)]))),128))])}const h=y(K,[["render",V]]),x={props:{activeKeys:{type:Array,required:!0},velocityValues:{type:Object,required:!0}},data(){return{whiteKeys:[{id:48},{id:50},{id:52},{id:53},{id:55},{id:57},{id:59},{id:60},{id:62},{id:64},{id:65},{id:67},{id:69},{id:71}],blackKeys:[{id:49,position:7},{id:51,position:13},{id:54,position:26},{id:56,position:33},{id:58,position:40},{id:61,position:53},{id:63,position:60},{id:66,position:73},{id:68,position:80},{id:70,position:87}]}},methods:{getKeyStyle(a){const i=this.velocityValues[a]||0;if(i>0){const l=1+i/127,e=Math.min(i*2,255);return{transform:`scale(${l})`,boxShadow:`0 0 ${e/4}px rgba(255, ${e}, 0)`,zIndex:2}}return{}}}},M={class:"keyboard-container"};function S(a,i,l,e,s,c){return n(),o("div",M,[(n(!0),o(r,null,u(s.whiteKeys,t=>(n(),o("div",{key:t.id,class:b(["key","white",{active:l.activeKeys.includes(t.id)}]),style:v(c.getKeyStyle(t.id))},null,6))),128)),(n(!0),o(r,null,u(s.blackKeys,t=>(n(),o("div",{key:t.id,class:b(["key","black",{active:l.activeKeys.includes(t.id)}]),style:v({left:t.position+"%",...c.getKeyStyle(t.id)})},null,6))),128))])}const p=y(x,[["render",S],["__scopeId","data-v-7deb6aa3"]]),R={components:{Knobs:h,Keyboard:p},data(){return{knobs:[{id:5,label:"Glide",angle:0,value:0},{id:9,label:"Oscillator Type",angle:0,value:0},{id:10,label:"Wave",angle:0,value:0},{id:12,label:"Timbre",angle:0,value:0},{id:13,label:"Shape",angle:0,value:0},{id:23,label:"Cutoff",angle:0,value:0},{id:83,label:"Resonance",angle:0,value:0},{id:102,label:"Cycling Env Rise",angle:0,value:0},{id:103,label:"Cycling Env Fall",angle:0,value:0},{id:28,label:"Cycling Env Hold",angle:0,value:0},{id:24,label:"Cycling Env Amount",angle:0,value:0},{id:105,label:"Attack",angle:0,value:0},{id:106,label:"Decay/Release",angle:0,value:0},{id:29,label:"Sustain",angle:0,value:0},{id:26,label:"Filter Amount",angle:0,value:0},{id:94,label:"LFO Rate",angle:0,value:0},{id:92,label:"ARP/SEQ Rate",angle:0,value:0}],activeKeys:[],velocityValues:{}}},methods:{handleMIDIMessage(a,i,l){if(console.log("Received MIDI message:",{control:a,value:i,type:l}),l==="note_on"){const e=a;i>0?(this.activeKeys.includes(e)||this.activeKeys.push(e),this.$set(this.velocityValues,e,i)):(this.activeKeys=this.activeKeys.filter(s=>s!==e),this.$delete(this.velocityValues,e))}else if(l==="note_off"){const e=a;this.activeKeys=this.activeKeys.filter(s=>s!==e),this.$delete(this.velocityValues,e)}if(l==="control_change"){const e=this.knobs.find(s=>s.id===a);e&&(e.value=i,e.angle=i/127*270-135)}}},mounted(){m((a,i,l)=>{this.handleMIDIMessage(a,i,l)})}},A={class:"microfreak-container"};function C(a,i,l,e,s,c){const t=h,f=p;return n(),o("div",A,[i[0]||(i[0]=d("h1",null,"MicroFreak",-1)),g(t,{knobs:s.knobs},null,8,["knobs"]),g(f,{activeKeys:s.activeKeys,velocityValues:s.velocityValues},null,8,["activeKeys","velocityValues"])])}const F=y(R,[["render",C]]);export{F as default};
